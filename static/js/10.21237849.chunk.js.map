{"version":3,"file":"static/js/10.21237849.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ListContacts/ListContacts.jsx","components/ContactSection/ContactSection.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector([selectContacts, selectFilter], (contactsName, contactsFilter) => {\n    return contactsName.filter(contact => {\n        if (contactsFilter.trim() === '') {\n            return contact;\n        }\n        return contact.name.toLowerCase().includes(contactsFilter.toLowerCase());\n    });\n})","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const MyForm = styled(Form)`\n  margin: 24px;\n  display: flex;\n  gap: 24px;\n  justify-content: center;\n`;\nexport const BoxInForm = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: -16px;\n  left: 2px;\n  color: orange;\n`;\nexport const Input = styled.input`\n  border: none;\n  border-bottom: 1px solid black;\n  border-radius: 1px;\n  outline: none;\n`;\nexport const Button = styled.button`\n\n`\n","import { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Input, MyForm, BoxInForm, Label, Button } from './ContactForm.styled';\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const listContacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(value, actions) => {\n        if (listContacts.some(item => item.name.trim() === value.name.trim())) {\n          alert(`${value.name} is already in contacts`);\n        } else {\n          dispatch(addContact(value));\n        }\n        actions.resetForm();\n      }}\n    >\n      {() => (\n        <MyForm>\n          <Field name=\"name\">\n            {({ field, form }) => (\n              <BoxInForm>\n                <Label>Name</Label>\n                <Input {...field} />\n                <div>{form.errors.name}</div>\n              </BoxInForm>\n            )}\n          </Field>\n          <Field name=\"number\">\n            {({ field, form }) => (\n              <BoxInForm>\n                <Label>Number</Label>\n                <Input {...field} type=\"tel\" name=\"number\" />\n                <div>{form.errors.number}</div>\n              </BoxInForm>\n            )}\n          </Field>\n          <Button type=\"submit\">Add contact</Button>\n        </MyForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ListContacts = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <ul style={{ display: 'flex',justifyContent:'center', gap: ' 36px', flexWrap: 'wrap',\n    padding:'28px' }}>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { statusFilter } from 'redux/filterSlice';\nimport { ListContacts } from 'components/ListContacts/ListContacts';\n\nexport const ContactSection = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: '16px',\n        }}\n      >\n        <h2>Contacts</h2>\n        <label>Find contacts by name</label>\n        <input\n          style={{\n            padding: '4px 8px',\n            border: '1px solid orange',\n            borderRadius: '8px',\n            outline: 'none',\n          }}\n          type=\"text\"\n          onChange={e => dispatch(statusFilter(e.target.value))}\n        />\n      </div>\n      <ListContacts />\n    </>\n  );\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactSection } from 'components/ContactSection/ContactSection';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <p>{isLoading && 'Request in progress...'}</p>\n      <ContactSection />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contactsName","contactsFilter","contact","trim","name","toLowerCase","includes","MyForm","styled","Form","_templateObject","_taggedTemplateLiteral","BoxInForm","_templateObject2","Label","_templateObject3","Input","_templateObject4","Button","_templateObject5","dispatch","useDispatch","listContacts","useSelector","_jsx","Formik","initialValues","number","onSubmit","value","actions","some","item","alert","concat","addContact","resetForm","children","_jsxs","Field","_ref","field","form","_objectSpread","errors","_ref2","type","ListContacts","visibleContacts","style","display","justifyContent","gap","flexWrap","padding","map","onClick","deleteContact","id","ContactSection","_Fragment","flexDirection","alignItems","border","borderRadius","outline","onChange","e","statusFilter","target","Contacts","useEffect","fetchContacts","Helmet","ContactForm"],"sourceRoot":""}